/*! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com*/
*,
:after,
:before {
  border: 0 solid #e5e7eb;
  box-sizing: border-box;
}
:after,
:before {
  --tw-content: '';
}
html {
  -webkit-text-size-adjust: 100%;
  font-feature-settings: normal;
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont,
    Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif,
    Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
  line-height: 1.5;
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
}
body {
  line-height: inherit;
  margin: 0;
}
hr {
  border-top-width: 1px;
  color: inherit;
  height: 0;
}
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}
a {
  color: inherit;
  text-decoration: inherit;
}
b,
strong {
  font-weight: bolder;
}
code,
kbd,
pre,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
    Liberation Mono, Courier New, monospace;
  font-size: 1em;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
table {
  border-collapse: collapse;
  border-color: inherit;
  text-indent: 0;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font-family: inherit;
  font-size: 100%;
  font-weight: inherit;
  line-height: inherit;
  margin: 0;
  padding: 0;
}
button,
select {
  text-transform: none;
}
[type='button'],
[type='reset'],
[type='submit'],
button {
  -webkit-appearance: button;
  background-color: transparent;
  background-image: none;
}
:-moz-focusring {
  outline: auto;
}
:-moz-ui-invalid {
  box-shadow: none;
}
progress {
  vertical-align: baseline;
}
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}
[type='search'] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}
::-webkit-search-decoration {
  -webkit-appearance: none;
}
::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}
summary {
  display: list-item;
}
blockquote,
dd,
dl,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
p,
pre {
  margin: 0;
}
fieldset {
  margin: 0;
}
fieldset,
legend {
  padding: 0;
}
menu,
ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
textarea {
  resize: vertical;
}
input::-moz-placeholder,
textarea::-moz-placeholder {
  color: #9ca3af;
  opacity: 1;
}
input::placeholder,
textarea::placeholder {
  color: #9ca3af;
  opacity: 1;
}
[role='button'],
button {
  cursor: pointer;
}
:disabled {
  cursor: default;
}
audio,
canvas,
embed,
iframe,
img,
object,
svg,
video {
  display: block;
  vertical-align: middle;
}
img,
video {
  height: auto;
  max-width: 100%;
}
[hidden] {
  display: none;
}
:root,
[data-theme] {
  background-color: hsla(var(--b1) / 1);
  background-color: hsla(var(--b1) / var(--tw-bg-opacity, 1));
  color: hsla(var(--bc) / 1);
  color: hsla(var(--bc) / var(--tw-text-opacity, 1));
}
html {
  -webkit-tap-highlight-color: transparent;
}
:root {
  --pf: 141 72% 34%;
  --sf: 141 75% 38%;
  --af: 35 69% 42%;
  --nf: 0 10% 5%;
  --b2: 0 12% 7%;
  --b3: 0 12% 7%;
  --in: 198 93% 60%;
  --su: 158 64% 52%;
  --wa: 43 96% 56%;
  --er: 0 91% 71%;
  --bc: 0 12% 82%;
  --sc: 141 100% 10%;
  --ac: 35 100% 10%;
  --nc: 0 7% 81%;
  --inc: 198 100% 12%;
  --suc: 158 100% 10%;
  --wac: 43 100% 11%;
  --erc: 0 100% 14%;
  --rounded-box: 1rem;
  --rounded-badge: 1.9rem;
  --animation-btn: 0.25s;
  --animation-input: 0.2s;
  --btn-text-case: uppercase;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 141 72% 42%;
  --pc: 141 100% 88%;
  --s: 141 75% 48%;
  --a: 35 69% 52%;
  --n: 0 10% 6%;
  --b1: 0 12% 8%;
  --rounded-btn: 1.9rem;
  color-scheme: dark;
}
*,
:after,
:before {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x: ;
  --tw-pan-y: ;
  --tw-pinch-zoom: ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal: ;
  --tw-slashed-zero: ;
  --tw-numeric-figure: ;
  --tw-numeric-spacing: ;
  --tw-numeric-fraction: ;
  --tw-ring-inset: ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur: ;
  --tw-brightness: ;
  --tw-contrast: ;
  --tw-grayscale: ;
  --tw-hue-rotate: ;
  --tw-invert: ;
  --tw-saturate: ;
  --tw-sepia: ;
  --tw-drop-shadow: ;
  --tw-backdrop-blur: ;
  --tw-backdrop-brightness: ;
  --tw-backdrop-contrast: ;
  --tw-backdrop-grayscale: ;
  --tw-backdrop-hue-rotate: ;
  --tw-backdrop-invert: ;
  --tw-backdrop-opacity: ;
  --tw-backdrop-saturate: ;
  --tw-backdrop-sepia: ;
}
::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x: ;
  --tw-pan-y: ;
  --tw-pinch-zoom: ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal: ;
  --tw-slashed-zero: ;
  --tw-numeric-figure: ;
  --tw-numeric-spacing: ;
  --tw-numeric-fraction: ;
  --tw-ring-inset: ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur: ;
  --tw-brightness: ;
  --tw-contrast: ;
  --tw-grayscale: ;
  --tw-hue-rotate: ;
  --tw-invert: ;
  --tw-saturate: ;
  --tw-sepia: ;
  --tw-drop-shadow: ;
  --tw-backdrop-blur: ;
  --tw-backdrop-brightness: ;
  --tw-backdrop-contrast: ;
  --tw-backdrop-grayscale: ;
  --tw-backdrop-hue-rotate: ;
  --tw-backdrop-invert: ;
  --tw-backdrop-opacity: ;
  --tw-backdrop-saturate: ;
  --tw-backdrop-sepia: ;
}
.alert {
  --tw-bg-opacity: 1;
  align-items: center;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
  border-radius: 1rem;
  border-radius: var(--rounded-box, 1rem);
  display: flex;
  flex-direction: column;
  gap: 1rem;
  justify-content: space-between;
  padding: 1rem;
  width: 100%;
}
.alert > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
  margin-top: calc(0.5rem * (1 - var(--tw-space-y-reverse)));
}
@media (min-width: 768px) {
  .alert {
    flex-direction: row;
  }
  .alert > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
    margin-top: calc(0px * (1 - var(--tw-space-y-reverse)));
  }
}
.alert > :where(*) {
  align-items: center;
  display: flex;
  gap: 0.5rem;
}
.avatar.placeholder > div {
  align-items: center;
  display: flex;
  justify-content: center;
}
.btm-nav {
  --tw-bg-opacity: 1;
  align-items: center;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  bottom: 0;
  color: currentColor;
  display: flex;
  flex-direction: row;
  height: 4rem;
  justify-content: space-around;
  left: 0;
  padding-bottom: env(safe-area-inset-bottom);
  position: fixed;
  right: 0;
  width: 100%;
}
.btm-nav > * {
  border-color: currentColor;
  display: flex;
  flex-basis: 100%;
  flex-direction: column;
  gap: 0.25rem;
  height: 100%;
  position: relative;
}
.btm-nav > *,
.btn {
  align-items: center;
  cursor: pointer;
  justify-content: center;
}
.btn {
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  animation: button-pop 0.25s ease-out;
  animation: button-pop var(--animation-btn, 0.25s) ease-out;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  border-color: transparent;
  border-color: hsl(var(--n) / var(--tw-border-opacity));
  border-radius: 0.5rem;
  border-radius: var(--rounded-btn, 0.5rem);
  border-width: 1px;
  border-width: var(--border-btn, 1px);
  color: hsl(var(--nc) / var(--tw-text-opacity));
  display: inline-flex;
  flex-shrink: 0;
  flex-wrap: wrap;
  font-size: 0.875rem;
  font-weight: 600;
  height: 3rem;
  line-height: 1.25rem;
  line-height: 1em;
  min-height: 3rem;
  padding-left: 1rem;
  padding-right: 1rem;
  text-align: center;
  text-decoration-line: none;
  text-transform: uppercase;
  text-transform: var(--btn-text-case, uppercase);
  transition-duration: 0.2s;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    -webkit-backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}
.btn-disabled,
.btn[disabled] {
  pointer-events: none;
}
.btn-circle,
.btn-square {
  height: 3rem;
  padding: 0;
  width: 3rem;
}
.btn-circle {
  border-radius: 9999px;
}
.btn.loading,
.btn.loading:hover {
  pointer-events: none;
}
.btn.loading:before {
  animation: spin 2s linear infinite;
  border-color: transparent currentColor currentColor transparent;
  border-radius: 9999px;
  border-width: 2px;
  content: '';
  height: 1rem;
  margin-right: 0.5rem;
  width: 1rem;
}
@media (prefers-reduced-motion: reduce) {
  .btn.loading:before {
    animation: spin 10s linear infinite;
  }
}
@keyframes spin {
  0% {
    transform: rotate(0);
  }
  to {
    transform: rotate(1turn);
  }
}
.btn-group > input[type='radio'].btn {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}
.btn-group > input[type='radio'].btn:before {
  content: attr(data-title);
}
.card {
  border-radius: 1rem;
  border-radius: var(--rounded-box, 1rem);
  display: flex;
  flex-direction: column;
  position: relative;
}
.card:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.card-body {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
  gap: 0.5rem;
  padding: 2rem;
  padding: var(--padding-card, 2rem);
}
.card-body :where(p) {
  flex-grow: 1;
}
.card-actions {
  align-items: flex-start;
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}
.card figure {
  align-items: center;
  display: flex;
  justify-content: center;
}
.card.image-full {
  display: grid;
}
.card.image-full:before {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  border-radius: 1rem;
  border-radius: var(--rounded-box, 1rem);
  content: '';
  opacity: 0.75;
  position: relative;
  z-index: 10;
}
.card.image-full:before,
.card.image-full > * {
  grid-column-start: 1;
  grid-row-start: 1;
}
.card.image-full > figure img {
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}
.card.image-full > .card-body {
  --tw-text-opacity: 1;
  color: hsl(var(--nc) / var(--tw-text-opacity));
  position: relative;
  z-index: 20;
}
.carousel {
  -ms-overflow-style: none;
  display: flex;
  overflow-x: scroll;
  scroll-behavior: smooth;
  scroll-snap-type: x mandatory;
  scrollbar-width: none;
}
.carousel-item {
  box-sizing: content-box;
  display: flex;
  flex: none;
  scroll-snap-align: start;
}
.carousel-center .carousel-item {
  scroll-snap-align: center;
}
.carousel-end .carousel-item {
  scroll-snap-align: end;
}
.checkbox {
  --chkbg: var(--bc);
  --chkfg: var(--b1);
  --tw-border-opacity: 0.2;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  border-radius: 0.5rem;
  border-radius: var(--rounded-btn, 0.5rem);
  border-width: 1px;
  cursor: pointer;
  flex-shrink: 0;
  height: 1.5rem;
  width: 1.5rem;
}
.form-control {
  flex-direction: column;
}
.form-control,
.label {
  display: flex;
}
.label {
  align-items: center;
  justify-content: space-between;
  padding: 0.5rem 0.25rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}
.input {
  --tw-border-opacity: 0;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  border-radius: 0.5rem;
  border-radius: var(--rounded-btn, 0.5rem);
  border-width: 1px;
  flex-shrink: 1;
  font-size: 1rem;
  height: 3rem;
  line-height: 2;
  line-height: 1.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  transition-duration: 0.2s;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    -webkit-backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.input-group {
  align-items: stretch;
  display: flex;
  width: 100%;
}
.input-group > .input {
  isolation: isolate;
}
.input-group > *,
.input-group > .input,
.input-group > .select {
  border-radius: 0;
}
.input-group :where(span) {
  --tw-bg-opacity: 1;
  align-items: center;
  background-color: hsl(var(--b2) / var(--tw-bg-opacity));
  background-color: hsl(var(--b3, var(--b2)) / var(--tw-bg-opacity));
  display: flex;
  padding-left: 1rem;
  padding-right: 1rem;
}
.input-group > :first-child {
  border-bottom-left-radius: 0.5rem;
  border-bottom-left-radius: var(--rounded-btn, 0.5rem);
  border-bottom-right-radius: 0;
  border-top-left-radius: 0.5rem;
  border-top-left-radius: var(--rounded-btn, 0.5rem);
  border-top-right-radius: 0;
}
.input-group > :last-child {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0.5rem;
  border-bottom-right-radius: var(--rounded-btn, 0.5rem);
  border-top-left-radius: 0;
  border-top-right-radius: 0.5rem;
  border-top-right-radius: var(--rounded-btn, 0.5rem);
}
.modal {
  --tw-bg-opacity: 0.4;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
  bottom: 0;
  display: flex;
  justify-content: center;
  left: 0;
  opacity: 0;
  overflow-y: hidden;
  overscroll-behavior: contain;
  pointer-events: none;
  position: fixed;
  right: 0;
  top: 0;
  transition-duration: 0.2s;
  transition-property: transform, opacity, visibility;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  visibility: hidden;
  z-index: 999;
}
:where(.modal) {
  align-items: center;
}
.modal-box {
  --tw-bg-opacity: 1;
  --tw-scale-x: 0.9;
  --tw-scale-y: 0.9;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  border-bottom-left-radius: 1rem;
  border-bottom-left-radius: var(--rounded-box, 1rem);
  border-bottom-right-radius: 1rem;
  border-bottom-right-radius: var(--rounded-box, 1rem);
  border-top-left-radius: 1rem;
  border-top-left-radius: var(--rounded-box, 1rem);
  border-top-right-radius: 1rem;
  border-top-right-radius: var(--rounded-box, 1rem);
  box-shadow: 0 25px 50px -12px #00000040;
  max-height: calc(100vh - 5em);
  max-width: 32rem;
  overflow-y: auto;
  overscroll-behavior: contain;
  padding: 1.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-duration: 0.2s;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    -webkit-backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  width: 91.666667%;
}
.modal-open,
.modal-toggle:checked + .modal,
.modal:target {
  opacity: 1;
  pointer-events: auto;
  visibility: visible;
}
.modal-toggle {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  height: 0;
  opacity: 0;
  position: fixed;
  width: 0;
}
.navbar {
  align-items: center;
  display: flex;
  min-height: 4rem;
  padding: 0.5rem;
  padding: var(--navbar-padding, 0.5rem);
  width: 100%;
}
:where(.navbar > *) {
  align-items: center;
  display: inline-flex;
}
.range {
  --range-shdw: var(--bc);
  -moz-appearance: none;
  appearance: none;
  -webkit-appearance: none;
  background-color: transparent;
  border-radius: 1rem;
  border-radius: var(--rounded-box, 1rem);
  cursor: pointer;
  height: 1.5rem;
  overflow: hidden;
  width: 100%;
}
.range:focus {
  outline: none;
}
.steps .step {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  grid-template-columns: auto;
  grid-template-rows: repeat(2, minmax(0, 1fr));
  grid-template-rows: 40px 1fr;
  min-width: 4rem;
  place-items: center;
  text-align: center;
}
.tabs {
  align-items: flex-end;
  display: flex;
}
.tab,
.tabs {
  flex-wrap: wrap;
}
.tab {
  --tab-padding: 1rem;
  --tw-text-opacity: 0.5;
  --tab-color: hsla(var(--bc) / var(--tw-text-opacity, 1));
  --tab-bg: hsla(var(--b1) / var(--tw-bg-opacity, 1));
  --tab-border-color: hsla(var(--b3) / var(--tw-bg-opacity, 1));
  align-items: center;
  color: var(--tab-color);
  cursor: pointer;
  display: inline-flex;
  font-size: 0.875rem;
  height: 2rem;
  justify-content: center;
  line-height: 1.25rem;
  line-height: 2;
  padding-left: 1rem;
  padding-left: var(--tab-padding, 1rem);
  padding-right: 1rem;
  padding-right: var(--tab-padding, 1rem);
  text-align: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}
.tab,
.table {
  position: relative;
}
.table {
  text-align: left;
}
.table th:first-child {
  left: 0;
  position: sticky;
  position: -webkit-sticky;
  z-index: 11;
}
.textarea {
  --tw-border-opacity: 0;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  border-radius: 0.5rem;
  border-radius: var(--rounded-btn, 0.5rem);
  border-width: 1px;
  flex-shrink: 1;
  font-size: 0.875rem;
  line-height: 1.25rem;
  line-height: 2;
  min-height: 3rem;
  padding: 0.5rem 1rem;
  transition-duration: 0.2s;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    -webkit-backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.toast {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  min-width: -moz-fit-content;
  min-width: fit-content;
  padding: 1rem;
  position: fixed;
}
.toggle {
  --tglbg: hsl(var(--b1));
  --handleoffset: 1.5rem;
  --handleoffsetcalculator: calc(var(--handleoffset) * -1);
  --togglehandleborder: 0 0;
  --tw-border-opacity: 0.2;
  --tw-bg-opacity: 0.5;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  border-radius: 1.9rem;
  border-radius: var(--rounded-badge, 1.9rem);
  border-width: 1px;
  box-shadow: var(--handleoffsetcalculator) 0 0 2px var(--tglbg) inset,
    0 0 0 2px var(--tglbg) inset, var(--togglehandleborder);
  cursor: pointer;
  flex-shrink: 0;
  height: 1.5rem;
  transition-duration: 0.3s;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition: background, box-shadow 0.2s ease-in-out;
  transition: background, box-shadow var(--animation-input, 0.2s) ease-in-out;
  width: 3rem;
}
.btn-outline.btn-primary .badge {
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-outline.btn-primary .badge-outline {
  --tw-border-opacity: 1;
  --tw-text-opacity: 1;
  background-color: transparent;
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  color: hsl(var(--p) / var(--tw-text-opacity));
}
.btn-outline.btn-primary:hover .badge {
  background-color: hsl(var(--pc) / var(--tw-bg-opacity));
  color: hsl(var(--p) / var(--tw-text-opacity));
}
.btn-outline.btn-primary:hover .badge,
.btn-outline.btn-primary:hover .badge.outline {
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  border-color: hsl(var(--pc) / var(--tw-border-opacity));
}
.btn-outline.btn-primary:hover .badge.outline {
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btm-nav > :not(.active) {
  padding-top: 0.125rem;
}
.btm-nav > :where(.active) {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  border-top-width: 2px;
}
.btm-nav > .disabled,
.btm-nav > .disabled:hover,
.btm-nav > [disabled],
.btm-nav > [disabled]:hover {
  --tw-border-opacity: 0;
  --tw-bg-opacity: 0.1;
  --tw-text-opacity: 0.2;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  color: hsl(var(--bc) / var(--tw-text-opacity));
  pointer-events: none;
}
.btm-nav > * .label {
  font-size: 1rem;
  line-height: 1.5rem;
}
.btn:active:focus,
.btn:active:hover {
  animation: none;
  transform: scale(0.95);
  transform: scale(var(--btn-focus-scale, 0.95));
}
.btn-active,
.btn:hover {
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
  border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
}
.btn:focus-visible {
  outline: 2px solid hsl(var(--nf));
  outline-offset: 2px;
}
.btn-primary {
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-primary.btn-active,
.btn-primary:hover {
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
  border-color: hsl(var(--pf, var(--p)) / var(--tw-border-opacity));
}
.btn-primary:focus-visible {
  outline: 2px solid hsl(var(--p));
}
.btn.glass.btn-active,
.btn.glass:hover {
  --glass-opacity: 25%;
  --glass-border-opacity: 15%;
}
.btn.glass:focus-visible {
  outline: 2px solid currentColor;
}
.btn-ghost {
  background-color: transparent;
  border-color: transparent;
  border-width: 1px;
  color: currentColor;
}
.btn-ghost.btn-active,
.btn-ghost:hover {
  --tw-border-opacity: 0;
  --tw-bg-opacity: 0.2;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
}
.btn-ghost:focus-visible {
  outline: 2px solid currentColor;
}
.btn-outline.btn-primary {
  --tw-text-opacity: 1;
  color: hsl(var(--p) / var(--tw-text-opacity));
}
.btn-outline.btn-primary.btn-active,
.btn-outline.btn-primary:hover {
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
  border-color: hsl(var(--pf, var(--p)) / var(--tw-border-opacity));
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-disabled,
.btn-disabled:hover,
.btn[disabled],
.btn[disabled]:hover {
  --tw-border-opacity: 0;
  --tw-bg-opacity: 0.2;
  --tw-text-opacity: 0.2;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  color: hsl(var(--bc) / var(--tw-text-opacity));
}
.btn.loading.btn-circle:before,
.btn.loading.btn-square:before {
  margin-right: 0;
}
.btn.loading.btn-lg:before,
.btn.loading.btn-xl:before {
  height: 1.25rem;
  width: 1.25rem;
}
.btn.loading.btn-sm:before,
.btn.loading.btn-xs:before {
  height: 0.75rem;
  width: 0.75rem;
}
.btn-group > .btn-active,
.btn-group > input[type='radio']:checked.btn {
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-group > .btn-active:focus-visible,
.btn-group > input[type='radio']:checked.btn:focus-visible {
  outline: 2px solid hsl(var(--p));
}
@keyframes button-pop {
  0% {
    transform: scale(0.95);
    transform: scale(var(--btn-focus-scale, 0.95));
  }
  40% {
    transform: scale(1.02);
  }
  to {
    transform: scale(1);
  }
}
.card :where(figure:first-child) {
  border-end-end-radius: unset;
  border-end-start-radius: unset;
  border-start-end-radius: inherit;
  border-start-start-radius: inherit;
  overflow: hidden;
}
.card :where(figure:last-child) {
  border-end-end-radius: inherit;
  border-end-start-radius: inherit;
  border-start-end-radius: unset;
  border-start-start-radius: unset;
  overflow: hidden;
}
.card:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}
.card.bordered {
  --tw-border-opacity: 1;
  border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
  border-width: 1px;
}
.card.compact .card-body {
  font-size: 0.875rem;
  line-height: 1.25rem;
  padding: 1rem;
}
.card.image-full :where(figure) {
  border-radius: inherit;
  overflow: hidden;
}
.carousel::-webkit-scrollbar {
  display: none;
}
.checkbox:focus-visible {
  outline: 2px solid hsl(var(--bc));
  outline-offset: 2px;
}
.checkbox:checked,
.checkbox[aria-checked='true'],
.checkbox[checked='true'] {
  --tw-bg-opacity: 1;
  animation: checkmark 0.2s ease-in-out;
  animation: checkmark var(--animation-input, 0.2s) ease-in-out;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  background-image: linear-gradient(
      -45deg,
      transparent 65%,
      hsl(var(--chkbg)) 65.99%
    ),
    linear-gradient(45deg, transparent 75%, hsl(var(--chkbg)) 75.99%),
    linear-gradient(-45deg, hsl(var(--chkbg)) 40%, transparent 40.99%),
    linear-gradient(
      45deg,
      hsl(var(--chkbg)) 30%,
      hsl(var(--chkfg)) 30.99%,
      hsl(var(--chkfg)) 40%,
      transparent 40.99%
    ),
    linear-gradient(-45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
  background-repeat: no-repeat;
}
.checkbox:indeterminate {
  --tw-bg-opacity: 1;
  animation: checkmark 0.2s ease-in-out;
  animation: checkmark var(--animation-input, 0.2s) ease-in-out;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  background-image: linear-gradient(
      90deg,
      transparent 80%,
      hsl(var(--chkbg)) 80%
    ),
    linear-gradient(-90deg, transparent 80%, hsl(var(--chkbg)) 80%),
    linear-gradient(
      0deg,
      hsl(var(--chkbg)) 43%,
      hsl(var(--chkfg)) 43%,
      hsl(var(--chkfg)) 57%,
      hsl(var(--chkbg)) 57%
    );
  background-repeat: no-repeat;
}
.checkbox:disabled {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  border-color: transparent;
  cursor: not-allowed;
  opacity: 0.2;
}
@keyframes checkmark {
  0% {
    background-position-y: 5px;
  }
  50% {
    background-position-y: -2px;
  }
  to {
    background-position-y: 0;
  }
}
[dir='rtl'] .checkbox:checked,
[dir='rtl'] .checkbox[aria-checked='true'],
[dir='rtl'] .checkbox[checked='true'] {
  background-image: linear-gradient(
      45deg,
      transparent 65%,
      hsl(var(--chkbg)) 65.99%
    ),
    linear-gradient(-45deg, transparent 75%, hsl(var(--chkbg)) 75.99%),
    linear-gradient(45deg, hsl(var(--chkbg)) 40%, transparent 40.99%),
    linear-gradient(
      -45deg,
      hsl(var(--chkbg)) 30%,
      hsl(var(--chkfg)) 30.99%,
      hsl(var(--chkfg)) 40%,
      transparent 40.99%
    ),
    linear-gradient(45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-primary {
  outline: 2px solid hsl(var(--p));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-ghost {
  outline: 2px solid currentColor;
}
.label-text {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.label a:hover,
.label-text {
  --tw-text-opacity: 1;
  color: hsl(var(--bc) / var(--tw-text-opacity));
}
.input[list]::-webkit-calendar-picker-indicator {
  line-height: 1em;
}
.input-bordered {
  --tw-border-opacity: 0.2;
}
.input:focus {
  outline: 2px solid hsla(var(--bc) / 0.2);
  outline-offset: 2px;
}
.input-primary {
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.input-primary:focus {
  outline: 2px solid hsl(var(--p));
}
.input-disabled,
.input[disabled] {
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
  --tw-text-opacity: 0.2;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
  border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
  cursor: not-allowed;
}
.input-disabled::-moz-placeholder,
.input[disabled]::-moz-placeholder {
  --tw-placeholder-opacity: 0.2;
  color: hsl(var(--bc) / var(--tw-placeholder-opacity));
}
.input-disabled::placeholder,
.input[disabled]::placeholder {
  --tw-placeholder-opacity: 0.2;
  color: hsl(var(--bc) / var(--tw-placeholder-opacity));
}
.menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul).active),
.menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul):active) {
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
.modal-open .modal-box,
.modal-toggle:checked + .modal .modal-box,
.modal:target .modal-box {
  --tw-translate-y: 0px;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@keyframes progress-loading {
  50% {
    left: 107%;
  }
}
@keyframes radiomark {
  0% {
    box-shadow: 0 0 0 12px hsl(var(--b1)) inset, 0 0 0 12px hsl(var(--b1)) inset;
  }
  50% {
    box-shadow: 0 0 0 3px hsl(var(--b1)) inset, 0 0 0 3px hsl(var(--b1)) inset;
  }
  to {
    box-shadow: 0 0 0 4px hsl(var(--b1)) inset, 0 0 0 4px hsl(var(--b1)) inset;
  }
}
.range:focus-visible::-webkit-slider-thumb {
  --focus-shadow: 0 0 0 6px hsl(var(--b1)) inset,
    0 0 0 2rem hsl(var(--range-shdw)) inset;
}
.range:focus-visible::-moz-range-thumb {
  --focus-shadow: 0 0 0 6px hsl(var(--b1)) inset,
    0 0 0 2rem hsl(var(--range-shdw)) inset;
}
.range::-webkit-slider-runnable-track {
  background-color: hsla(var(--bc) / 0.1);
  border-radius: 1rem;
  border-radius: var(--rounded-box, 1rem);
  height: 0.5rem;
  width: 100%;
}
.range::-moz-range-track {
  background-color: hsla(var(--bc) / 0.1);
  border-radius: 1rem;
  border-radius: var(--rounded-box, 1rem);
  height: 0.5rem;
  width: 100%;
}
.range::-webkit-slider-thumb {
  --filler-size: 100rem;
  --filler-offset: 0.6rem;
  appearance: none;
  -webkit-appearance: none;
  background-color: hsl(var(--b1));
  border-radius: 1rem;
  border-radius: var(--rounded-box, 1rem);
  border-style: none;
  box-shadow: 0 0 0 3px hsl(var(--range-shdw)) inset, 0 0,
    calc(var(--filler-size) * -1 - var(--filler-offset)) 0 0 var(--filler-size);
  box-shadow: 0 0 0 3px hsl(var(--range-shdw)) inset, var(--focus-shadow, 0 0),
    calc(var(--filler-size) * -1 - var(--filler-offset)) 0 0 var(--filler-size);
  color: hsl(var(--range-shdw));
  height: 1.5rem;
  position: relative;
  top: 50%;
  transform: translateY(-50%);
  width: 1.5rem;
}
.range::-moz-range-thumb {
  --filler-size: 100rem;
  --filler-offset: 0.5rem;
  background-color: hsl(var(--b1));
  border-radius: 1rem;
  border-radius: var(--rounded-box, 1rem);
  border-style: none;
  box-shadow: 0 0 0 3px hsl(var(--range-shdw)) inset, 0 0,
    calc(var(--filler-size) * -1 - var(--filler-offset)) 0 0 var(--filler-size);
  box-shadow: 0 0 0 3px hsl(var(--range-shdw)) inset, var(--focus-shadow, 0 0),
    calc(var(--filler-size) * -1 - var(--filler-offset)) 0 0 var(--filler-size);
  color: hsl(var(--range-shdw));
  height: 1.5rem;
  position: relative;
  top: 50%;
  width: 1.5rem;
}
@keyframes rating-pop {
  0% {
    transform: translateY(-0.125em);
  }
  40% {
    transform: translateY(-0.125em);
  }
  to {
    transform: translateY(0);
  }
}
.steps .step:before {
  content: '';
  height: 0.5rem;
  margin-left: -100%;
  top: 0;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  width: 100%;
}
.steps .step:after,
.steps .step:before {
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  background-color: hsl(var(--b2) / var(--tw-bg-opacity));
  background-color: hsl(var(--b3, var(--b2)) / var(--tw-bg-opacity));
  color: hsl(var(--bc) / var(--tw-text-opacity));
  grid-column-start: 1;
  grid-row-start: 1;
}
.steps .step:after {
  border-radius: 9999px;
  content: counter(step);
  counter-increment: step;
  display: grid;
  height: 2rem;
  place-items: center;
  place-self: center;
  position: relative;
  width: 2rem;
  z-index: 1;
}
.steps .step:first-child:before {
  content: none;
}
.steps .step[data-content]:after {
  content: attr(data-content);
}
.tab:hover {
  --tw-text-opacity: 1;
}
.tab.tab-active {
  --tw-border-opacity: 1;
  --tw-text-opacity: 1;
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
}
.tab:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.tab:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: -3px;
}
.tab:focus-visible.tab-lifted {
  border-bottom-left-radius: 0.5rem;
  border-bottom-left-radius: var(--tab-radius, 0.5rem);
  border-bottom-right-radius: 0.5rem;
  border-bottom-right-radius: var(--tab-radius, 0.5rem);
}
.tab-lifted.tab-active {
  background-color: var(--tab-bg);
  border-left-color: var(--tab-border-color);
  border-right-color: var(--tab-border-color);
  border-top-color: var(--tab-border-color);
  border-width: 1px 1px 0;
  border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0
    var(--tab-border, 1px);
  padding-bottom: 1px;
  padding-bottom: var(--tab-border, 1px);
  padding-left: calc(1rem - 1px);
  padding-left: calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));
  padding-right: calc(1rem - 1px);
  padding-right: calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));
  padding-top: 0;
}
.tab-lifted.tab-active:after,
.tab-lifted.tab-active:before {
  --tab-grad: calc(68% - var(--tab-border, 1px));
  --tab-corner-bg: radial-gradient(
    circle at var(--circle-pos),
    transparent var(--tab-grad),
    var(--tab-border-color) calc(var(--tab-grad) + 0.3px),
    var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
    var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.3px)
  );
  bottom: 0;
  content: '';
  display: block;
  height: 0.5rem;
  height: var(--tab-radius, 0.5rem);
  position: absolute;
  width: 0.5rem;
  width: var(--tab-radius, 0.5rem);
  z-index: 1;
}
.tab-lifted.tab-active:before {
  --circle-pos: top left;
  background-image: var(--tab-corner-bg);
  left: -0.5rem;
  left: calc(var(--tab-radius, 0.5rem) * -1);
}
[dir='rtl'] .tab-lifted.tab-active:before {
  --circle-pos: top right;
}
.tab-lifted.tab-active:after {
  --circle-pos: top right;
  background-image: var(--tab-corner-bg);
  right: -0.5rem;
  right: calc(var(--tab-radius, 0.5rem) * -1);
}
[dir='rtl'] .tab-lifted.tab-active:after {
  --circle-pos: top left;
}
.tab-lifted.tab-active + .tab-lifted.tab-active:before,
.tab-lifted.tab-active:first-child:before,
.tab-lifted.tab-active:last-child:after {
  background: none;
}
.tabs-boxed {
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
  padding: 0.25rem;
}
.tabs-boxed,
.tabs-boxed .tab-active {
  --tw-bg-opacity: 1;
  border-radius: 0.5rem;
  border-radius: var(--rounded-btn, 0.5rem);
}
.tabs-boxed .tab-active {
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
}
.tabs-boxed .tab-active,
.tabs-boxed .tab-active:hover {
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
.table :where(th, td) {
  padding: 1rem;
  vertical-align: middle;
  white-space: nowrap;
}
.table tr.active td,
.table tr.active th,
.table tr.active:nth-child(2n) td,
.table tr.active:nth-child(2n) th,
.table tr.hover:hover td,
.table tr.hover:hover th,
.table tr.hover:nth-child(2n):hover td,
.table tr.hover:nth-child(2n):hover th {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2) / var(--tw-bg-opacity));
  background-color: hsl(var(--b3, var(--b2)) / var(--tw-bg-opacity));
}
.table:where(:not(.table-zebra))
  :where(thead, tbody, tfoot)
  :where(tr:not(:last-child) :where(th, td)) {
  --tw-border-opacity: 1;
  border-bottom-width: 1px;
  border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
}
.table :where(thead, tfoot) :where(th, td) {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
  font-size: 0.75rem;
  font-weight: 700;
  line-height: 1rem;
  text-transform: uppercase;
}
.table :where(tbody th, tbody td) {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
}
:where(.table :first-child) :where(:first-child) :where(th, td):first-child {
  border-top-left-radius: 0.5rem;
}
:where(.table :first-child) :where(:first-child) :where(th, td):last-child {
  border-top-right-radius: 0.5rem;
}
:where(.table :last-child) :where(:last-child) :where(th, td):first-child {
  border-bottom-left-radius: 0.5rem;
}
:where(.table :last-child) :where(:last-child) :where(th, td):last-child {
  border-bottom-right-radius: 0.5rem;
}
.textarea-bordered {
  --tw-border-opacity: 0.2;
}
.textarea:focus {
  outline: 2px solid hsla(var(--bc) / 0.2);
  outline-offset: 2px;
}
.textarea-disabled,
.textarea[disabled] {
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
  --tw-text-opacity: 0.2;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
  border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
  cursor: not-allowed;
}
.textarea-disabled::-moz-placeholder,
.textarea[disabled]::-moz-placeholder {
  --tw-placeholder-opacity: 0.2;
  color: hsl(var(--bc) / var(--tw-placeholder-opacity));
}
.textarea-disabled::placeholder,
.textarea[disabled]::placeholder {
  --tw-placeholder-opacity: 0.2;
  color: hsl(var(--bc) / var(--tw-placeholder-opacity));
}
.toast > * {
  animation: toast-pop 0.25s ease-out;
}
@keyframes toast-pop {
  0% {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}
[dir='rtl'] .toggle {
  --handleoffsetcalculator: calc(var(--handleoffset) * 1);
}
.toggle:focus-visible {
  outline: 2px solid hsl(var(--bc));
  outline-offset: 2px;
}
.toggle:checked,
.toggle[aria-checked='true'],
.toggle[checked='true'] {
  --handleoffsetcalculator: var(--handleoffset);
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
}
[dir='rtl'] .toggle:checked,
[dir='rtl'] .toggle[aria-checked='true'],
[dir='rtl'] .toggle[checked='true'] {
  --handleoffsetcalculator: calc(var(--handleoffset) * -1);
}
.toggle:indeterminate {
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
  box-shadow: calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset,
    calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset,
    0 0 0 2px var(--tglbg) inset;
}
[dir='rtl'] .toggle:indeterminate {
  box-shadow: calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset,
    calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset,
    0 0 0 2px var(--tglbg) inset;
}
.toggle-primary:focus-visible {
  outline: 2px solid hsl(var(--p));
}
.toggle-primary:checked,
.toggle-primary[aria-checked='true'],
.toggle-primary[checked='true'] {
  --tw-border-opacity: 0.1;
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
.toggle:disabled {
  --tw-border-opacity: 1;
  --togglehandleborder: 0 0 0 3px hsl(var(--bc)) inset,
    var(--handleoffsetcalculator) 0 0 3px hsl(var(--bc)) inset;
  background-color: transparent;
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  cursor: not-allowed;
  opacity: 0.3;
}
.rounded-box {
  border-radius: 1rem;
  border-radius: var(--rounded-box, 1rem);
}
.btm-nav-xs > :where(.active) {
  border-top-width: 1px;
}
.btm-nav-xs .btm-nav-label {
  font-size: 0.75rem;
  line-height: 1rem;
}
.btm-nav-sm > :where(.active) {
  border-top-width: 2px;
}
.btm-nav-sm .btm-nav-label {
  font-size: 0.75rem;
  line-height: 1rem;
}
.btm-nav-md > :where(.active) {
  border-top-width: 2px;
}
.btm-nav-md .btm-nav-label {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.btm-nav-lg > :where(.active) {
  border-top-width: 4px;
}
.btm-nav-lg .btm-nav-label {
  font-size: 1rem;
  line-height: 1.5rem;
}
.btn-xs {
  font-size: 0.75rem;
  height: 1.5rem;
  min-height: 1.5rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.btn-sm {
  font-size: 0.875rem;
  height: 2rem;
  min-height: 2rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
.btn-md {
  font-size: 0.875rem;
  height: 3rem;
  min-height: 3rem;
  padding-left: 1rem;
  padding-right: 1rem;
}
.btn-lg {
  font-size: 1.125rem;
  height: 4rem;
  min-height: 4rem;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}
.btn-wide {
  width: 16rem;
}
.btn-block {
  width: 100%;
}
.btn-square:where(.btn-xs) {
  height: 1.5rem;
  padding: 0;
  width: 1.5rem;
}
.btn-square:where(.btn-sm) {
  height: 2rem;
  padding: 0;
  width: 2rem;
}
.btn-square:where(.btn-md) {
  height: 3rem;
  padding: 0;
  width: 3rem;
}
.btn-square:where(.btn-lg) {
  height: 4rem;
  padding: 0;
  width: 4rem;
}
.btn-circle:where(.btn-xs) {
  border-radius: 9999px;
  height: 1.5rem;
  padding: 0;
  width: 1.5rem;
}
.btn-circle:where(.btn-sm) {
  border-radius: 9999px;
  height: 2rem;
  padding: 0;
  width: 2rem;
}
.btn-circle:where(.btn-md) {
  border-radius: 9999px;
  height: 3rem;
  padding: 0;
  width: 3rem;
}
.btn-circle:where(.btn-lg) {
  border-radius: 9999px;
  height: 4rem;
  padding: 0;
  width: 4rem;
}
.input-md {
  font-size: 0.875rem;
  height: 3rem;
  line-height: 1.25rem;
  line-height: 2;
  padding-left: 1rem;
  padding-right: 1rem;
}
.steps-horizontal .step {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  grid-template-rows: repeat(2, minmax(0, 1fr));
  place-items: center;
  text-align: center;
}
.steps-vertical .step {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  grid-template-rows: repeat(1, minmax(0, 1fr));
}
:where(.toast) {
  --tw-translate-x: 0px;
  --tw-translate-y: 0px;
  bottom: 0;
  left: auto;
  right: 0;
  top: auto;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-start) {
  --tw-translate-x: 0px;
  left: 0;
  right: auto;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-center) {
  --tw-translate-x: -50%;
  left: 50%;
  right: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-end) {
  --tw-translate-x: 0px;
  left: auto;
  right: 0;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-bottom) {
  --tw-translate-y: 0px;
  bottom: 0;
  top: auto;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-middle) {
  --tw-translate-y: -50%;
  bottom: auto;
  top: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-top) {
  --tw-translate-y: 0px;
  bottom: auto;
  top: 0;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.btn-group .btn:not(:first-child):not(:last-child),
.btn-group.btn-group-horizontal .btn:not(:first-child):not(:last-child) {
  border-radius: 0;
}
.btn-group .btn:first-child:not(:last-child),
.btn-group.btn-group-horizontal .btn:first-child:not(:last-child) {
  border-bottom-left-radius: 0.5rem;
  border-bottom-left-radius: var(--rounded-btn, 0.5rem);
  border-bottom-right-radius: 0;
  border-top-left-radius: 0.5rem;
  border-top-left-radius: var(--rounded-btn, 0.5rem);
  border-top-right-radius: 0;
  margin-left: -1px;
  margin-top: 0;
}
.btn-group .btn:last-child:not(:first-child),
.btn-group.btn-group-horizontal .btn:last-child:not(:first-child) {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0.5rem;
  border-bottom-right-radius: var(--rounded-btn, 0.5rem);
  border-top-left-radius: 0;
  border-top-right-radius: 0.5rem;
  border-top-right-radius: var(--rounded-btn, 0.5rem);
}
.btn-group.btn-group-vertical .btn:first-child:not(:last-child) {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  border-top-left-radius: 0.5rem;
  border-top-left-radius: var(--rounded-btn, 0.5rem);
  border-top-right-radius: 0.5rem;
  border-top-right-radius: var(--rounded-btn, 0.5rem);
  margin-left: 0;
  margin-top: -1px;
}
.btn-group.btn-group-vertical .btn:last-child:not(:first-child) {
  border-bottom-left-radius: 0.5rem;
  border-bottom-left-radius: var(--rounded-btn, 0.5rem);
  border-bottom-right-radius: 0.5rem;
  border-bottom-right-radius: var(--rounded-btn, 0.5rem);
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.card-compact .card-body {
  font-size: 0.875rem;
  line-height: 1.25rem;
  padding: 1rem;
}
.card-normal .card-body {
  font-size: 1rem;
  line-height: 1.5rem;
  padding: 2rem;
  padding: var(--padding-card, 2rem);
}
.modal-bottom :where(.modal-box) {
  --tw-translate-y: 2.5rem;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  max-width: none;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  width: 100%;
}
.modal-middle :where(.modal-box) {
  --tw-translate-y: 0px;
  --tw-scale-x: 0.9;
  --tw-scale-y: 0.9;
  border-bottom-left-radius: 1rem;
  border-bottom-left-radius: var(--rounded-box, 1rem);
  border-bottom-right-radius: 1rem;
  border-bottom-right-radius: var(--rounded-box, 1rem);
  max-width: 32rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  width: 91.666667%;
}
.steps-horizontal .step {
  grid-template-columns: auto;
  grid-template-rows: 40px 1fr;
  min-width: 4rem;
}
.steps-horizontal .step:before {
  --tw-translate-y: 0px;
  --tw-translate-x: 0px;
  content: '';
  height: 0.5rem;
  margin-left: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  width: 100%;
}
.steps-vertical .step {
  gap: 0.5rem;
  grid-template-columns: 40px 1fr;
  grid-template-rows: auto;
  justify-items: start;
  min-height: 4rem;
}
.steps-vertical .step:before {
  --tw-translate-y: -50%;
  --tw-translate-x: -50%;
  height: 100%;
  margin-left: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  width: 0.5rem;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.right-2 {
  right: 0.5rem;
}
.top-2 {
  top: 0.5rem;
}
.col-span-5 {
  grid-column: span 5 / span 5;
}
.col-span-1 {
  grid-column: span 1 / span 1;
}
.row-span-1 {
  grid-row: span 1 / span 1;
}
.row-span-2 {
  grid-row: span 2 / span 2;
}
.m-auto {
  margin: auto;
}
.m-4 {
  margin: 1rem;
}
.m-2 {
  margin: 0.5rem;
}
.my-4 {
  margin-bottom: 1rem;
  margin-top: 1rem;
}
.my-auto {
  margin-bottom: auto;
  margin-top: auto;
}
.mt-2 {
  margin-top: 0.5rem;
}
.mb-16 {
  margin-bottom: 4rem;
}
.flex {
  display: flex;
}
.table {
  display: table;
}
.grid {
  display: grid;
}
.h-6 {
  height: 1.5rem;
}
.h-3 {
  height: 0.75rem;
}
.h-3\/6 {
  height: 50%;
}
.h-10 {
  height: 2.5rem;
}
.h-full {
  height: 100%;
}
.h-screen {
  height: 100vh;
}
.w-full {
  width: 100%;
}
.w-auto {
  width: auto;
}
.w-6 {
  width: 1.5rem;
}
.w-10 {
  width: 2.5rem;
}
.w-96 {
  width: 24rem;
}
.max-w-xs {
  max-width: 20rem;
}
.grow {
  flex-grow: 1;
}
.cursor-pointer {
  cursor: pointer;
}
.grid-flow-col {
  grid-auto-flow: column;
}
.grid-cols-6 {
  grid-template-columns: repeat(6, minmax(0, 1fr));
}
.grid-rows-2 {
  grid-template-rows: repeat(2, minmax(0, 1fr));
}
.flex-row {
  flex-direction: row;
}
.place-content-center {
  place-content: center;
}
.place-items-center {
  place-items: center;
}
.content-center {
  align-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.justify-center {
  justify-content: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-items-center {
  justify-items: center;
}
.gap-4 {
  gap: 1rem;
}
.gap-x-2 {
  -moz-column-gap: 0.5rem;
  column-gap: 0.5rem;
}
.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
  margin-top: calc(1rem * (1 - var(--tw-space-y-reverse)));
}
.space-x-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-left: calc(1rem * (1 - var(--tw-space-x-reverse)));
  margin-right: calc(1rem * var(--tw-space-x-reverse));
}
.space-y-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
  margin-top: calc(2rem * (1 - var(--tw-space-y-reverse)));
}
.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
  margin-top: calc(0.5rem * (1 - var(--tw-space-y-reverse)));
}
.divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
  border-top-width: calc(1px * (1 - var(--tw-divide-y-reverse)));
}
.place-self-stretch {
  place-self: stretch;
}
.overflow-x-scroll {
  overflow-x: scroll;
}
.overflow-y-scroll {
  overflow-y: scroll;
}
.whitespace-pre-line {
  white-space: pre-line;
}
.break-words {
  overflow-wrap: break-word;
}
.rounded-xl {
  border-radius: 0.75rem;
}
.rounded-lg {
  border-radius: 0.5rem;
}
.rounded-md {
  border-radius: 0.375rem;
}
.border {
  border-width: 1px;
}
.border-2 {
  border-width: 2px;
}
.border-y-2 {
  border-bottom-width: 2px;
  border-top-width: 2px;
}
.border-b {
  border-bottom-width: 1px;
}
.border-dashed {
  border-style: dashed;
}
.border-primary {
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.border-current {
  border-color: currentColor;
}
.bg-neutral {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
}
.bg-inherit {
  background-color: inherit;
}
.fill-red-500 {
  fill: #ef4444;
}
.fill-yellow-500 {
  fill: #eab308;
}
.fill-green-500 {
  fill: #22c55e;
}
.p-4 {
  padding: 1rem;
}
.p-0 {
  padding: 0;
}
.p-2 {
  padding: 0.5rem;
}
.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.py-6 {
  padding-bottom: 1.5rem;
  padding-top: 1.5rem;
}
.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}
.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}
.font-medium {
  font-weight: 500;
}
.font-bold {
  font-weight: 700;
}
.normal-case {
  text-transform: none;
}
.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}
.text-neutral-content {
  --tw-text-opacity: 1;
  color: hsl(var(--nc) / var(--tw-text-opacity));
}
.opacity-50 {
  opacity: 0.5;
}
.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -4px rgba(0, 0, 0, 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),
    0 4px 6px -4px var(--tw-shadow-color);
}
.shadow-lg,
.shadow-xl {
  box-shadow: 0 0 #0000, 0 0 #0000, var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-xl {
  --tw-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
    0 8px 10px -6px rgba(0, 0, 0, 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color),
    0 8px 10px -6px var(--tw-shadow-color);
}
.vue-map {
  width: 100%;
}
.vue-map,
.vue-map-container {
  height: 100%;
}
